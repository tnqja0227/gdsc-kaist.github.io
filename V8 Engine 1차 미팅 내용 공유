---
layout: single
title:  Chrome V8 Javascript Engine 의 동작 과정
date:   2022-11-23
author: Subeom Lee

header:
  og_image: /assets/images/logo.jpg
---

## Overview

Chrome V8 Javascript Engine 의 동작 과정 스터디의 첫주차 미팅에서 공유한 내용입니다. 

1. What is JIT Compiler (JIT 컴파일러란 ?)
  a. Interpreter , Compiler
  b. JIT 컴파일러의 동장과정

2. V8 Engine 구동방식
  a. V8 Engine 소개
  b. 다른 JAVASCRIPT Engine 들의 특징

3. V8 엔진 동작 과정에 따른 효율적인 JS 코드 작성 방법 알아보기 

첫 주차에 저희는 1, 2 부분에 초점을 맞추어 스터디를 해보았고 최종적으로 3 부분을 목표로 하려고 계획하였습니다. 

## 1. JIT Compiler

a. Interpreter and Compiler

먼저 V8 자바스크립트 엔진의 동작 과정에 대해 알아보기 전에, 프로그램 언어를 실행하는 몇가지 방법에 대해 알아보고자 한다.

프로그래밍 언어로 작성된 코드를 실행하는 데는 두 가지 방법이 있다. 가장 일반적인 방법은 프로그램을 **컴파일** 하는 것이고, 
다른 하나는 프로그램을 **인터프리터**에 통과시키는 방법이다. 인터프리터는 프로그래밍 언어로 작성된 코드를 중간 형태(ex. 바이트코드)로 번역한 다음, 
그것을 실행한다. 이와는 대조적으로, 컴파일러는 고급 명령어들을 직접 기계어로 번역한다.

1. 인터프리터
    인터프리터는 프로그래밍 언어의 소스 코드를 바로 실행하는 컴퓨터 프로그램 또는 환경을 말한다. 
    인터프리터로 프로그램을 실행시킬 경우 기계어 명령어들이 만들어지는 컴파일 단계를 거칠 필요가 없다. 
    다만 최적화 과정(ex. 동일한 함수의 반복 호출)이 없이 번역하기 때문에 성능이 낮다.
    
2. 컴파일러
    컴파일(Compile)은 프로그래밍 언어로 작성된 컴퓨터 프로그램을 다른 언어의 동등한 프로그램으로 변환하는 프로세스이고 이러한 작업을 실행하는 것을 컴파일러라 한다. 
    이는 프로그램을 실행하기 전에 미리 기계어로 변환한다. 그렇기에 컴파일된 프로그램들은 일반적으로 인터프리터를 이용해 실행시키는 것보다 더 빠르게 실행된다. 
    다만 만약 원시 프로그램의 크기가 크다면, 실행시키는 데 상당한 시간이 걸릴 수 있다.
    
b. JIT 컴파일러
    JIT는 Just-In-Time의 약자이다. JIT 컴파일러는 프로그램을 실제 실행하는 시점에 기계어로 번역하는 컴파일 기법이다. 
    즉, 위 두 가지 방식, 인터프리터와 컴파일러를 혼합시킨 방식을 사용한다. 실행 시점에서 인터프리트 방식으로 기계어 코드를 생성하면서 그 코드를 캐싱하여, 
    같은 함수가 여러 번 불릴 때 매번 기계어 코드를 생성하는 것 보다 더 효율적으로 기계어를 저장한 뒤 바로 다시 사용하는 방식으로 JAVASCRIPT 가 훨씬 빠르게 실행 된다.
    
    JIT 컴파일러는 먼저 JS 코드를 parsing을 통한 Abstract Syntax Tree 로 바뀐 과정 후 compile을 하는 과정을 거친다. 이후 컴파일러가 바이트코드를 기계어로 바꾸어 한 명령 문의 집한인 Stub가 실행이 되게 되는데 이 과정에서 STUB 가 실행되는 횟수에 비례하여 optimization method를 만들어 매번 같은 stub가 실행 될 때 바이트코드에서 기계어로 바꿔주는 작업을 최적화 하는 컴파일러가 JIT 컴파일러이다. 다른 stub들이 실행되는 횟수에 따라 warm 한 stub들이 많이 실행되면 hot 한 stub로 바뀌게 되고 JIT 컴파일러는 hot 한 stub를 우선적으로 compile 하게 된다. 만약 최적화된 방법과 다른 상황이 발생할 시 deoptimization 과정을 통해 특정 최적화 방식을 bailing out 하여 다시 warm, hot stub들을 찾아 낸다. 
    다른 최적화 방법에 따라 더 효율적인 JIT 컴파일러가 만들어 진다고 생각할 수 있다. 
    
https://hacks.mozilla.org/2017/02/a-crash-course-in-just-in-time-jit-compilers/
https://defiant-scaffold-5b5.notion.site/GDSC_1122-573b8285d55a4ddaa8b07e444a2680b0
    
## 2. V8 Engine 구동방식
a. V8 Engine 소개
  V8 Engine 같은 경우 기존 AJITC 방식을 사용한 JIT compiler (adaptive JIT compiler) 을 사용한다. 
b. 다른 JAVASCRIPT Engine 들의 특징
  FireFox 같은 경우 array that only contains integer 에 대한 다른 분류과정이 있어 array가 모두 integer만 있을 경우 arr[i]가 integer 값이라는 것을 다시 확인하지 않는다. (이런 다른 분류과정이 (classification) 최적화된 JIT를 만드는 것에 다른 영향을 끼칠 것이라고 생각함)


3. V8 엔진 동작 과정에 따른 효율적인 JS 코드 작성 방법 알아보기 

JAVASCRIPT 코드를 DevTools를 사용하여 코드가 실행될 때 call stack을 살펴보면서 최적화 코드는 무엇일까 생각해보기 . (for 문을 사용하지 않는 코드) ETC ... 

    
    
    
    
    
